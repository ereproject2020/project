{"version":3,"sources":["images/reset.svg","images/magnifier.png","components/Criteria.js","components/Guide.js","context/context.js","components/Songlist.js","components/CreateForm.js","components/Searchform.js","components/Songinfo.js","components/Starrate.js","components/Starshow.js","components/Text.js","components/Textlist.js","components/Login.js","components/Textresult.js","components/Commentform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Criteria","state","console","log","style","border","pfadding","margin","Component","Guide","padding","axios","defaults","xsrfCookieName","xsrfHeaderName","Context","createContext","Provider","InfoConsumer","Consumer","InfoProvider","userInfo","userId","name","image","songInfo","comment","actions","setUserInfo","data","setState","setSongInfo","setComment","concat","value","this","props","children","useConsumer","WrappedComponent","setId","isModalOpen","openModal","closeModal","chooseSong","e","a","onMode","songList","filter","item","id","parseInt","target","get","params","song","then","res","list","map","info","key","className","title","singer","onClick","CreateForm","mode","handleMode","createSong","handleChange","handleSubmit","preventDefault","post","type","handleshowSrch","onSubmit","placeholder","onChange","SearchForm","songname","rawsongname","show","showContent","modeUpdate","backToSearch","src","require","alt","rawtext","text","toLowerCase","replace","length","handleshowCri","handleshowGui","loading","difficulty","setDifficulty","rating","i","starsIdx","starsRating","toFixed","bind","catch","prevProps","Starrate","_modeSetting","update","Reset","_resetRating","stars","starClass","idx","push","onMouseOver","_mouseOver","onMouseMove","onMouseLeave","onTouchMove","onTouchStart","onTouchEnd","_makeStars","Starshow","persist","nativeEvent","offsetX","clientWidth","v","starUpdate","defaultProp","authorized","handleUpdate","userName","userImage","put","message","handleRemove","delete","object","handleUpdateStar","index","moreReview","pastReview","array","setCommentUpdate","avgDifficulty","responseComment","googleId","profileObj","imageUrl","onModeComment","responseLogin","responseFail","err","error","responseLogout","alert","showButton","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","React","difficultyUpdate","onModeSearch","setDifficultyUpdate","App","chooseContent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cba2166.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reset.a6b1cf7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.ba662840.png\";","import React, { Component } from 'react';\nclass Criteria extends Component {\n    state = {  }\n    render() {\n        console.log('Criteria') \n        const style={\n            border: '1px solid black',\n            pfadding: '8px',\n            margin: '8px'\n        }\n        return (\n            \n            <div style={style}>\n                difficulty Criteria\n            </div>\n         );\n    }\n}\n \nexport default Criteria;","import React, { Component } from 'react';\nclass Guide extends Component {\n    state = {  }\n    render() {\n        console.log('Guide')\n        const style={\n            border: '1px solid black',\n            padding: '8px',\n            margin: '8px'\n        }\n        return (\n            <div style={style}>\n                This extension is to help users to calibrate vocal difficulty\n            </div>\n         );\n    }\n}\n \nexport default Guide;","import React, { Component, createContext } from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nconst Context = createContext();\nconst { Provider, Consumer: InfoConsumer } = Context;\n\nclass InfoProvider extends Component {\n    state = {\n        userInfo: {\n            userId: '',\n            name: '',\n            image: '',\n\n        },\n        songInfo: [],\n        comment: [],\n    }\n    actions = {\n        setUserInfo: (data) => {\n            this.setState({\n                userInfo: data\n            })\n        },\n        // setSongInfo의 concat 부분은 백으로만 구동시 수정=>songInfo:data\n        setSongInfo: (data) => {\n            this.setState({\n                songInfo: [data[0]]\n            })\n        },\n        setComment: (data) => {\n            this.setState({\n                comment: [].concat(data)\n            },\n            )\n        },\n    }\n    render() {\n        const { state, actions } = this;\n        const value = { state, actions };\n        return (\n            <Provider value={value}>\n                {this.props.children}\n            </Provider>\n        )\n    }\n}\nfunction useConsumer(WrappedComponent) {\n    return function useConsumer(props) {\n        return (\n            <InfoConsumer>\n                {\n                    ({ state, actions }) => (\n                        <WrappedComponent\n                            {...props}\n                            userInfo={state.userInfo}\n                            songInfo={state.songInfo}\n                            comment={state.comment}\n                            setId={actions.setId}\n                            setSongInfo={actions.setSongInfo}\n                            setComment={actions.setComment}\n                            setUserInfo={actions.setUserInfo}\n                        />\n                        //{..props}는 parents props, 나머지는 context props를 의미\n                    )\n                }\n            </InfoConsumer>\n        )\n    }\n}\n\nexport {\n    InfoConsumer,\n    InfoProvider,\n    useConsumer\n}","import React, { Component } from 'react';\nimport { useConsumer } from '../context/context';\nimport '../css/Songlist.css';\nimport axios from \"axios\";\nimport Modal from './Modal';\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Songlist extends Component {\n    state = {\n        isModalOpen: false\n    }\n\n    openModal = () => {\n        this.setState({ isModalOpen: true });\n    }\n\n    closeModal = () => {\n        this.setState({ isModalOpen: false });\n    }\n\n    chooseSong = async (e) => {\n        const { setSongInfo, setComment, onMode } = this.props\n        const data = this.props.songList.filter(\n            item => item.id === parseInt(e.target.id)\n        )\n        console.log(data)\n        setSongInfo(data);\n        await axios.get(\"/api/comment/\", {\n            params: {\n                song: e.target.id\n            }\n        }).then(res => {\n            setComment(res.data)\n        }).then(onMode())\n    }\n    render() {\n\n\n        const { songList } = this.props\n        let list = songList.map(\n            (info) => (\n                <div key={info.id} className=\"songList\">\n                    <div className=\"container2\" >\n                        <div className='label1'>제목</div>\n                        <div className='label2'>가수</div>\n                        <div className=\"title\"> {info.title}</div>\n                        <div className=\"singer\"> {info.singer}</div>\n                        <button id={info.id} className=\"goldenrod\" onClick={this.chooseSong}>선택</button>\n                    </div>\n                </div>\n\n            ));\n        return (\n            <div>{list}</div>\n\n        );\n    }\n}\n\n\nexport default useConsumer(Songlist);","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport \"../css/CreateForm.css\";\nimport '../css/button.css'\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\nclass CreateForm extends Component {\n    state = {\n        mode: 'default',\n        title: '',\n        singer: ''\n    }\n    handleMode = () => {\n        this.props.onMode('search')\n    }\n    createSong = () => {\n        this.setState({\n            mode: 'create'\n        })\n    }\n    handleChange = (e) => {\n        const target = e.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        await axios.post(\"/api/song/\", {\n            title: this.state.title,\n            singer: this.state.singer\n        })\n        this.props.onMode(this.state.title)\n\n    }\n\n    render() {\n        if (this.state.mode === 'default') {\n            return (\n                <div className=\"default\">\n                    <div style={{\"margin-top\":\"4vh\"}}\n                    ><h4>찾으시는 노래가 없나요? </h4></div>\n                    <div style={{\"margin-top\":\"1vh\"}}><h4> 다른 사용자를 위해 노래 정보를 입력해주세요.</h4></div>\n                    <button id={\"submitsong\"}className={\"blue\"} onClick={this.createSong}\n                    >노래정보 입력</button>\n                    <button id={\"backsonglist\"} className={\"blue\"} type=\"button\" onClick={this.props.handleshowSrch}>뒤로</button>\n                </div>\n            );\n        }\n        if (this.state.mode === 'create') {\n            return (\n                <div className=\"create\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"title\">\n                        <input\n                            name=\"title\"\n                            type=\"text\"\n                            placeholder=\"제목\"\n                            onChange={this.handleChange}\n                            value={this.state.title}\n                        ></input>\n                        </div>\n                        <div className=\"singer\">\n                        <input\n                            name=\"singer\"\n                            type=\"text\"\n                            placeholder=\"가수\"\n                            onChange={this.handleChange}\n                            value={this.state.singer}\n                        ></input>\n                        </div>\n                        <button className={\"blue\"} type=\"submit\"\n                        >노래 추가</button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CreateForm;","import React, { Component } from 'react';\nimport Criteria from './Criteria'\nimport Guide from './Guide';\nimport Songlist from './Songlist';\nimport axios from \"axios\";\nimport CreateForm from './CreateForm';\nimport '../css/Searchform.css'\nimport '../css/button.css'\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\nclass SearchForm extends Component {\n    state = {\n        songname: '',\n        rawsongname: '',\n        show: 'search',\n        songList: [{}]\n    }\n    showContent = () => {\n        const { show } = this.state;\n        if (show === 'criteria') {\n            return <Criteria></Criteria>\n        } else if (show === 'guide') {\n            return <Guide></Guide>\n        } else if (show === 'list') {\n            return (\n                <div>\n                    <Songlist onMode={this.modeUpdate} songList={this.state.songList}></Songlist>\n                    <CreateForm onMode={this.backToSearch} handleshowSrch={this.handleshowSrch}></CreateForm>\n                </div>\n            )\n        } else if (show === 'create') {\n            return <CreateForm onMode={this.backToSearch} handleshowSrch={this.handleshowSrch}></CreateForm>\n        }\n        else if(show === 'search') {\n            return <div>\n                <img id=\"magnifier\" src={require(\"../images/magnifier.png\")} alt=\"돋보기\"></img>\n                <h2>노래제목을 검색해주세요</h2>\n            </div>\n        }\n\n    }\n    backToSearch = async (title) =>{\n        await axios.get(\"/api/song/\", {\n            params: {\n                title: title\n            }\n        }).then(res => this.setState({\n            show : 'list',\n            songList: res.data\n        }))\n    }\n    modeUpdate = () => {\n        this.props.onMode('result')\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        let rawtext = e.target.value\n        let text = rawtext.toLowerCase().replace(/(\\s*)/g, \"\");\n        this.setState({\n            rawsongname: rawtext,\n            songname: text,\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        await axios.get(\"/api/song/\", {\n            params: {\n                title: this.state.songname\n            }\n        }).then(res => this.setState({\n            songList: res.data\n        }))\n        if (this.state.songList.length === 0) {\n            this.setState({\n                show: 'create'\n            })\n        } else {\n            this.setState({\n                show: 'list'\n            })\n        }\n    }\n    handleshowCri = () => {\n        this.setState({\n            show: 'criteria'\n        })\n    }\n    handleshowGui = () => {\n        this.setState({\n            show: 'guide'\n        })\n    }\n    handleshowSrch = () => {\n        this.setState({\n            show: 'search'\n        })\n    }\n    render() {\n        return (\n            <div id=\"border\">\n                <div>\n                <form className='search' onSubmit={this.handleSubmit}>\n                    <input className='input'\n                        name='rawsongname'\n                        placeholder='노래 제목을 입력하세요'\n                        onChange={this.handleChange}\n                        value={this.state.rawsongname}\n                    ></input>\n                    <button type='submit'>search</button>\n                </form>\n                </div>\n                <div className=\"container1\">\n                    <button className='guide orange' type=\"submit\" onClick={this.handleshowGui}>도움말</button>\n                    <button className='rate pink' type=\"submit\" onClick={this.handleshowCri}>난이도</button>\n                    <div className='content'>\n                    {this.showContent()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchForm;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport \"../css/Songinfo.css\"\nimport { useConsumer } from '../context/context';\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Songinfo extends Component {\n    state = {\n        loading: true,\n        difficulty : 0\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.difficulty !== prevProps.difficulty){ \n            this.setState({\n                difficulty:this.props.difficulty\n            })\n        }\n    }\n\n    setDifficulty = async () => {\n        await axios.get(\"/api/comment/\", {\n            params: {\n                song: this.props.song.id\n            }\n        }).then(function(res){\n            var rating=0\n            for(var i in res.data){\n                rating=rating+res.data[i].starsIdx+res.data[i].starsRating\n            }\n            this.setState({difficulty : (rating/res.data.length).toFixed(2)})\n            console.log(\"calculate difficulty\")\n        }.bind(this)    \n        ).then(\n            this.setState({loading : false})\n        ).catch(e => console.log(e))\n        return true\n    }\n\n    render() {\n        const { song } = this.props\n        if ((this.state.loading === false)) {\n            return (\n                <div className=\"container3\" >\n                    <div className='label1'>제목</div>\n                    <div className='label2'>가수</div>\n                    <div className=\"title\"> {song.title}</div>\n                    <div className=\"singer\"> {song.singer}</div>\n                    <div className=\"difficulty\"> 난이도<h2 style={{\"margin\":\"auto\"}}>{this.state.difficulty}</h2></div>\n                    <div className=\"ratenumber\">{this.props.comment.length}명이 평가</div> \n                </div>\n            );\n        }else{\n            this.setDifficulty()\n            return(\n                <div>\n                    loading..\n                </div>\n            )\n        }\n    }\n}\n\nexport default useConsumer(Songinfo);","import React, { Component } from 'react';\nimport Reset from '../images/reset.svg';\nimport '../css/Starrate.css';\n\nclass Starrate extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            update:this.props.update\n        }\n        this._resetRating = this._resetRating.bind(this);\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.update !==prevProps.update){\n            this.setState({\n                update:this.props.update\n            })\n        }\n    }\n    _modeSetting=()=>{\n        const{update}=this.state\n        if(update){\n            return(<div className=\"reset__btn\">\n                    <img src={Reset} alt=\"reset\" onClick={(e)=>{this._resetRating(e)}} />\n                </div>)\n        }\n    }\n\n    _resetRating(e){\n        if(e.type === \"mouseleave\" || e.type === \"onTouchEnd\"){        \n            this.props.onChange(this.props.starsIdx,this.props.starsRating);\n        }else if(e.type === \"click\"){\n            this.props.onChange(0,0);\n        }    \n    }\n\n    _makeStars(){\n        let stars = [];\n        for(let i = 0; i < 10; i+=2){\n            let starClass = \"star__rate\";\n            \n             if(this.props.rating !== 0){\n                if (i <= this.props.idx) {               \n                    if(this.props.idx === i && this.props.rating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }else if(this.props.starsRating !== 0){\n                if (i <= this.props.starsIdx) {            \n                    if(this.props.starsIdx === i && this.props.starsRating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }\n            if(this.state.update){\n            stars.push(\n                <label key={i} \n                    className={starClass} \n                    onClick={()=>{this.props.onChange(this.props.idx,this.props.rating)}}\n                    onMouseOver={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseLeave={(e)=>{this._resetRating(e)}}                    \n                    onTouchMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchStart={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchEnd={(e)=>{this._resetRating(e)}}\n                >\n                </label>\n            )\n            }else{\n                stars.push(\n                    <label key={i} className={starClass}></label>\n                )\n            }\n        }\n        return stars;\n    }\n\n    render() {\n        return (\n            <div className=\"starRate__wrap\">\n                {this._makeStars()}       \n            </div>\n        );\n    }\n}\n\nexport default Starrate;","import React, { Component } from 'react';\nimport Starrate from './Starrate';\n\nclass Starshow extends Component {\n  static defaultProp={\n    starsIdx:0,\n    starsRating:0,\n  }\n  state = {\n    idx:0,\n    rating: 0,    \n    starsIdx: this.props.starsIdx,\n    starsRating: this.props.starsRating,\n  }\n\n  _mouseOver = (e,i) => {\n    e.persist()\n    let offsetX = e.nativeEvent.offsetX; \n    let clientX = e.target.clientWidth;\n\n    if(offsetX > clientX / 2){\n      let value = 2;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }else{\n      let value = 1;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }\n  }\n\n  handleChange = (i,v) => {\n    this.setState({\n      idx:0,\n      rating:0,\n      starsIdx:i,\n      starsRating:v\n    });\n    this.props.starUpdate(this.state)\n  }\n\n  render() {\n    return (\n      <Starrate \n        _mouseOver={this._mouseOver}\n        onChange={this.handleChange} \n        idx={this.state.idx} \n        rating={this.state.rating}         \n        starsIdx={this.state.starsIdx}         \n        starsRating={this.state.starsRating}\n        update={this.props.update}\n      />\n    );\n  }\n}\n\nexport default Starshow;","import React, { Component } from 'react';\nimport { useConsumer } from '../context/context';\nimport Starshow from './Starshow';\nimport '../css/text.css';\nimport '../css/button.css';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Text extends Component {\n    state = {\n        update: false,\n        text: '',\n        starsIdx: this.props.info.starsIdx,\n        starsRating: this.props.info.starsRating,\n    }\n    authorized = false\n    handleUpdate = async () => {\n        const { update, text, starsIdx, starsRating } = this.state;\n        const { info, comment, setComment } = this.props;\n        if (update) {\n            setComment(\n                comment.map(item => (info.id === item.id ?\n                    {\n                        id: this.props.info.id,\n                        text: text,\n                        starsIdx: starsIdx,\n                        starsRating: starsRating,\n                        userId: info.userId,\n                        userName: info.userName,\n                        userImage: info.userImage,\n                        song: this.props.songInfo[0].id\n                    } : item))\n            )\n            await axios.put(`/api/comment/${this.props.info.id}/`, {\n                id: this.props.info.id,\n                text: text,\n                starsIdx: starsIdx,\n                starsRating: starsRating,\n                userId: info.userId,\n                userName: info.userName,\n                userImage: info.userImage,\n                song: this.props.songInfo[0].id\n            }).catch(e => console.log(e.message))\n        } else {\n            this.setState({ text: info.text })\n        }\n        this.setState({\n            update: !update\n        })\n    }\n    handleRemove = async () => {\n        const { setComment, comment } = this.props\n        await axios.delete(`/api/comment/${this.props.info.id}`)\n        setComment(comment.filter(object => object.id !== this.props.info.id))\n    }\n    handleChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    handleUpdateStar = (data) => {\n        this.setState({\n            starsIdx: data.starsIdx,\n            starsRating: data.starsRating\n        })\n    }\n    render() {\n        const { update } = this.state\n        if (this.props.info.userId === this.props.userInfo.userId) {\n            this.authorized = true\n        }\n        return (\n            <div className={\"text\"} >\n                {\n                    update ?\n                        <div className={\"opinion\"}>\n                            <textarea\n                                name=\"text\"\n                                onChange={this.handleChange}\n                                value={this.state.text}\n                            ></textarea>\n                        </div>\n                        :\n                        <div className={\"opinion\"}>\n                            {this.props.info.text}\n                        </div>\n                }\n                <Starshow \n                    starsIdx={this.state.starsIdx}\n                    starsRating={this.state.starsRating}\n                    update={this.state.update}\n                    starUpdate={this.handleUpdateStar}\n                ></Starshow> \n                <span className={\"rating\"}>{this.state.starsIdx + this.state.starsRating}/10</span>\n            {\n                    this.authorized ?\n                        <div className={\"updatebutton\"}>\n                            <button id={\"updatesubmit\"}\n                                className=\"goldenrod\"\n                                type=\"submit\"\n                                onClick={this.handleUpdate}\n                            >{update ? \"입력\" : \"수정\"}</button>\n\n                            <button id={\"delete\"}\n                                className=\"goldenrod\"\n                                type=\"submit\"\n                                onClick={this.handleRemove}\n                            >삭제</button>\n                        </div>\n                        :\n                        <div className={\"updatebutton\"}></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default useConsumer(Text);","import React, { Component } from 'react';\nimport Songinfo from './Songinfo';\nimport Text from './Text';\nimport \"../css/textlist.css\";\nimport '../css/textresult.css';\nimport { useConsumer} from '../context/context';\nclass Textlist extends Component {\n    state = { index: 0 }\n    difficulty = 0\n    \n    moreReview = () => {\n        this.setState({ index: this.state.index + 5 })\n    }\n    pastReview = () => {\n        this.setState({ index: this.state.index-5})\n    }\n    \n\n    render() {\n        const { comment } = this.props\n        this.difficulty = 0.00\n        const list = comment.map(\n            function (info, index, array) {\n                this.difficulty = this.difficulty + info.starsIdx + info.starsRating\n                if ((index > array.length - this.state.index - 5)\n                &&(index<array.length-this.state.index)) {\n                    return (\n                        <div className={\"textlist\"} key={index}>\n                            <img className={\"picture\"} src={info.userImage}></img>\n                            <Text info={info} onMode={this.props.onMode} setCommentUpdate = {this.props.setCommentUpdate}></Text>\n                        </div>\n                    )\n                }\n            }.bind(this)\n            // 같은 song 내 comment 별 id가 필요할 수도 있음. \n        )\n        const avgDifficulty= (this.difficulty/comment.length).toFixed(2)\n        const{songInfo}=this.props\n        return (\n            <div>\n                <div>\n                    {/* 노래제목: {songInfo[0].title}   가수: {songInfo[0].singer}  난이도:{(this.difficulty/comment.length).toFixed(2)} */}\n                <Songinfo song={songInfo[0]} difficulty={avgDifficulty}></Songinfo>\n                { !this.props.comment[0] ?\n                            <div><h2>이 노래의 첫번째 댓글을 작성해주세요.</h2></div>\n                        :\n                            <div> {list}</div>\n                        }\n                    </div>\n                <div id={\"buttons\"}>\n                <button id={\"past\"} type=\"submit\" onClick={this.pastReview}\n                >◁</button>\n                <button id={\"more\"} type=\"submit\" onClick={this.moreReview}\n                >▷</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default useConsumer(Textlist);","import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useConsumer } from \"../context/context\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name:'',\n      image:'',\n      }\n  }\n\n  responseComment = async (res)=>{\n    const {userInfo,setUserInfo}=this.props\n    setUserInfo({\n      userId:res.googleId,\n      name:res.profileObj.name,\n      image:res.profileObj.imageUrl\n    })\n    if (userInfo.userId!==0){\n      this.props.onModeComment()\n    }\n  }\n  responseLogin = async (res)=>{\n    const {setUserInfo}=this.props\n    setUserInfo({\n      userId:res.googleId,\n      name:res.profileObj.name,\n      image:res.profileObj.imageUrl\n    })\n  }\n\n  responseFail =(err)=>{\n    console.error(err);\n  }\n  responseLogout=()=>{\n    const {setUserInfo}=this.props\n    alert('로그아웃 되었습니다.')\n    setUserInfo({\n      userId:'',\n      name:'',\n      image:'',\n    })\n    console.log('logout')\n  }\n\n  showButton=()=>{\n    if(!this.props.userInfo.userId){\n      return(\n      <div>\n          <GoogleLogin\n            clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n            buttonText=\"댓글 쓰기\"\n            onSuccess={this.responseComment} \n            onFailure={this.responseFail}\n            cookiePolicy={'single_host_origin'}\n          />\n          <GoogleLogin\n            clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n            buttonText=\"로그인\"\n            onSuccess={this.responseLogin} \n            onFailure={this.responseFail}\n            cookiePolicy={'single_host_origin'}\n            />\n      </div>\n      )\n    }else{\n      return(\n      <div>\n        <GoogleLogout\n        clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        onLogoutSuccess={this.responseLogout}\n        ></GoogleLogout>\n       \n      </div>\n      )\n    }\n  }\n\n\n  render() {\n    console.log(this.props.userInfo)\n    return (\n        <div>\n        {this.showButton()}\n        </div>\n      );\n  }\n}\n\nexport default useConsumer(Login);\n","import React, {Component } from 'react';\nimport Textlist from './Textlist';\nimport { useConsumer } from '../context/context';\nimport Login from './Login';\nimport '../css/textresult.css';\n\nclass Textresult extends Component {\n    state = {difficultyUpdate : 0}\n\n    onModeComment=()=>{\n        this.props.onMode('comment')\n    }\n    onModeSearch=()=>{\n        this.props.onMode('search')\n    }\n    setDifficultyUpdate=(data)=>{\n        this.setState({difficultyUpdate : data})\n    }\n    showButton=()=>{\n        if(this.props.userInfo.userId){\n            return(<button id={\"writecomment\"} className={\"blue\"} onClick={this.onModeComment}> 의견 남기기</button>)\n        }else{\n            return(<span></span>)\n        }\n    }\n    render() {\n        \n        return ( \n        <div >\n            <Textlist onMode = {this.props.onMode}></Textlist>\n            <div id={\"textresult\"}>\n            <button id={\"before\"} className={\"blue\"} type=\"button\" onClick={this.onModeSearch}> 뒤로 </button>\n            {this.showButton()}\n            </div>\n\n            <div id={\"login\"}><Login onModeComment={this.onModeComment}></Login></div>\n        </div>\n         );\n    }\n}\n \nexport default useConsumer(Textresult);","import React, { Component } from 'react';\nimport Starshow from './Starshow';\nimport { useConsumer } from '../context/context';\nimport Songinfo from './Songinfo';\nimport '../css/Comment.css'\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Commentform extends Component {\n    state = {\n        userId: this.props.userInfo.userId,\n        userName: this.props.userInfo.name,\n        userImage: this.props.userInfo.image,\n        // userId와 UserName을 백에서 추가, user 프로필 사진도 받을 수 있는데 나중에 디자인할 때 고려해봐야할듯\n        song: this.props.songInfo[0].title,\n        text: '',\n        starsIdx: '',\n        starsRating: ''\n    }\n    handleMode = () => {\n        this.props.onMode('result')\n    }\n    handleChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    handleUpdateStar = (data) => {\n        this.setState({\n            starsIdx: data.starsIdx,\n            starsRating: data.starsRating\n        })\n    }\n\n    handleSubmit = async (e) => {\n        const { setComment, comment } = this.props\n        e.preventDefault();\n        await axios.post(\"/api/comment/\", {\n            song: this.props.songInfo[0].id,\n            text: this.state.text,\n            starsIdx: this.state.starsIdx,\n            starsRating: this.state.starsRating,\n            userId: this.state.userId,\n            userName: this.state.userName,\n            userImage: this.state.userImage\n        }).then(res => {\n            setComment(comment.concat({\n                id: res.data.id,\n                song: this.props.songInfo[0].id,\n                text: this.state.text,\n                starsIdx: this.state.starsIdx,\n                starsRating: this.state.starsRating,\n                userId: this.state.userId,\n                userName: this.state.userName,\n                userImage: this.state.userImage\n            }))\n            console.log(res.data)\n        }\n        )\n        this.handleMode()\n        //새로운 comment 작성 후 장고로 post하는 기능 만들기\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Songinfo song={this.props.songInfo[0]}></Songinfo>\n\n                <form id={\"comment\"} onSubmit={this.handleSubmit}>\n                    <img  src={this.state.userImage} alt=\"사용자 이미지\" ></img>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"이곳에 의견을 남겨주세요\"\n                        onChange={this.handleChange}\n                        value={this.state.text}\n                    ></textarea>\n                    <button id={\"submit\" } className={\"blue\"} type=\"submit\"\n                    >댓글 입력</button>\n                    <span id={\"words\"}><h3>당신이 평가한 난이도는?</h3></span>\n                    <Starshow id={\"commentstar\"} update={true} starUpdate={this.handleUpdateStar} ></Starshow>\n                    <span id={\"commentrating\"}>{this.state.starsIdx + this.state.starsRating}/10</span>\n                    \n                        <button id={\"back\"} className={\"blue\"} type=\"button\" onClick={this.handleMode}>뒤로</button>\n                </form>\n                \n            </div>\n        );\n    }\n}\n\nexport default useConsumer(Commentform);","import React, { Component } from 'react';\nimport SearchForm from './components/Searchform';\nimport Textresult from './components/Textresult';\nimport Commentform from './components/Commentform';\nimport { InfoProvider } from './context/context';\nclass App extends Component {\n  state = {\n    mode: '',\n    isModalOpen: false\n  }\n\n  handleMode = (mode) => {\n    this.setState({\n      mode: mode\n    })\n  }\n  chooseContent = () => {\n    const { mode } = this.state\n    if (mode === 'result') {\n      return (<Textresult onMode={this.handleMode}></Textresult>)\n    } else if (mode === 'comment') {\n      return (<Commentform onMode={this.handleMode}></Commentform>)\n    } else {\n      return (<SearchForm onMode={this.handleMode}></SearchForm>)\n    }\n  }\n  render() {\n    console.log('app')\n    console.log(this.state.mode)\n    return (\n      <div>\n        <InfoProvider>\n          {this.chooseContent()}\n        </InfoProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}